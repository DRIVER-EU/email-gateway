version: '3'
services:
  webmail:
    image: drivereu/driver-roundcube:latest
    hostname: webmail
    container_name: webmail
    build:
      context: ./../roundcube_driver-eu
      dockerfile: Dockerfile
    environment:
    - ROUNDCUBEMAIL_DEFAULT_HOST=${HOSTNAME}
    - ROUNDCUBEMAIL_SMTP_SERVER=${HOSTNAME}
    - ROUNDCUBEMAIL_DEFAULT_PORT=143
    - ROUNDCUBEMAIL_SMTP_PORT=25
    ports:
    - "5000:80"
    depends_on:
    - mailserver
  mailserver:
    image: drivereu/driver-mailserver:latest
    hostname: ${HOSTNAME}
    domainname: ${DOMAINNAME}
    container_name: ${CONTAINER_NAME}
    ports:
    - "25:25"
    - "143:143"
    - "587:587"
    - "993:993"
    - "3000:3000"
    build:
      context: ./../../packages/mail-manager/mail-server-api
      dockerfile: Dockerfile
    volumes:
     - maildata:/var/mail
     - mailstate:/var/mail-state
     - mailconfig/:/tmp/docker-mailserver/
    environment:
    - DMS_DEBUG=${DMS_DEBUG}
    - ENABLE_CLAMAV=${ENABLE_CLAMAV}
    - ONE_DIR=${ONE_DIR}
    - ENABLE_POP3=${ENABLE_POP3}
    - ENABLE_FAIL2BAN=${ENABLE_FAIL2BAN}
    - ENABLE_MANAGESIEVE=${ENABLE_MANAGESIEVE}
    - OVERRIDE_HOSTNAME=${OVERRIDE_HOSTNAME}
    - POSTMASTER_ADDRESS=${POSTMASTER_ADDRESS}
    - POSTSCREEN_ACTION=${POSTSCREEN_ACTION}
    - REPORT_RECIPIENT=${REPORT_RECIPIENT}
    - REPORT_SENDER=${REPORT_SENDER}
    - REPORT_INTERVAL=${REPORT_INTERVAL}
    - SMTP_ONLY=${SMTP_ONLY}
    - SSL_TYPE=${SSL_TYPE}
    - TLS_LEVEL=${TLS_LEVEL}
    - SPOOF_PROTECTION=${SPOOF_PROTECTION}
    - ENABLE_SRS=${ENABLE_SRS}
    - PERMIT_DOCKER=${PERMIT_DOCKER}
    - VIRUSMAILS_DELETE_DELAY=${VIRUSMAILS_DELETE_DELAY}
    - ENABLE_POSTFIX_VIRTUAL_TRANSPORT=${ENABLE_POSTFIX_VIRTUAL_TRANSPORT}
    - POSTFIX_DAGENT=${POSTFIX_DAGENT}
    - POSTFIX_MAILBOX_SIZE_LIMIT=${POSTFIX_MAILBOX_SIZE_LIMIT}
    - POSTFIX_MESSAGE_SIZE_LIMIT=${POSTFIX_MESSAGE_SIZE_LIMIT}
    - ENABLE_SPAMASSASSIN=${ENABLE_SPAMASSASSIN}
    - SA_TAG=${SA_TAG}
    - SA_TAG2=${SA_TAG2}
    - SA_KILL=${SA_KILL}
    - SA_SPAM_SUBJECT=${SA_SPAM_SUBJECT}
    - ENABLE_FETCHMAIL=${ENABLE_FETCHMAIL}
    - FETCHMAIL_POLL=${FETCHMAIL_POLL}
    - ENABLE_LDAP=${ENABLE_LDAP}
    - LDAP_START_TLS=${LDAP_START_TLS}
    - LDAP_SERVER_HOST=${LDAP_SERVER_HOST}
    - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE}
    - LDAP_BIND_DN=${LDAP_BIND_DN}
    - LDAP_BIND_PW=${LDAP_BIND_PW}
    - LDAP_QUERY_FILTER_USER=${LDAP_QUERY_FILTER_USER}
    - LDAP_QUERY_FILTER_GROUP=${LDAP_QUERY_FILTER_GROUP}
    - LDAP_QUERY_FILTER_ALIAS=${LDAP_QUERY_FILTER_ALIAS}
    - LDAP_QUERY_FILTER_DOMAIN=${LDAP_QUERY_FILTER_DOMAIN}
    - DOVECOT_TLS=${DOVECOT_TLS}
    - DOVECOT_USER_FILTER=${DOVECOT_USER_FILTER}
    - DOVECOT_PASS_FILTER=${DOVECOT_PASS_FILTER}
    - ENABLE_POSTGREY=${ENABLE_POSTGREY}
    - POSTGREY_DELAY=${POSTGREY_DELAY}
    - POSTGREY_MAX_AGE=${POSTGREY_MAX_AGE}
    - POSTGREY_AUTO_WHITELIST_CLIENTS=${POSTGREY_AUTO_WHITELIST_CLIENTS}
    - POSTGREY_TEXT=${POSTGREY_TEXT}
    - ENABLE_SASLAUTHD=${ENABLE_SASLAUTHD}
    - SASLAUTHD_MECHANISMS=${SASLAUTHD_MECHANISMS}
    - SASLAUTHD_MECH_OPTIONS=${SASLAUTHD_MECH_OPTIONS}
    - SASLAUTHD_LDAP_SERVER=${SASLAUTHD_LDAP_SERVER}
    - SASLAUTHD_LDAP_SSL=${SASLAUTHD_LDAP_SSL}
    - SASLAUTHD_LDAP_BIND_DN=${SASLAUTHD_LDAP_BIND_DN}
    - SASLAUTHD_LDAP_PASSWORD=${SASLAUTHD_LDAP_PASSWORD}
    - SASLAUTHD_LDAP_SEARCH_BASE=${SASLAUTHD_LDAP_SEARCH_BASE}
    - SASLAUTHD_LDAP_FILTER=${SASLAUTHD_LDAP_FILTER}
    - SASLAUTHD_LDAP_START_TLS=${SASLAUTHD_LDAP_START_TLS}
    - SASLAUTHD_LDAP_TLS_CHECK_PEER=${SASLAUTHD_LDAP_TLS_CHECK_PEER}
    - SASL_PASSWD=${SASL_PASSWD}
    - SRS_EXCLUDE_DOMAINS=${SRS_EXCLUDE_DOMAINS}
    - SRS_SECRET=${SRS_SECRET}
    - DEFAULT_RELAY_HOST=${DEFAULT_RELAY_HOST}
    - RELAY_HOST=${RELAY_HOST}
    - RELAY_PORT=${RELAY_PORT}
    - RELAY_USER=${RELAY_USER}
    - RELAY_PASSWORD=${RELAY_PASSWORD}
    cap_add:
    - NET_ADMIN
    - SYS_PTRACE
    restart: always
  mailgateway:
    image: drivereu/driver-mailgateway:latest
    container_name: mailgateway
    build:
      context: ./../../packages/server
      dockerfile: Dockerfile    
    ports:
    # websocket notifications
    - "9996:9996"
    # REST api 
    - "7891:7891"
    environment:
    - ApiMailServerUrl=http://${HOSTNAME}:3000
    - LargeFileServiceUrl=http://large_file_service:9090/upload
    - SmtpHost=${HOSTNAME}
    - SmtpPort=25
    - IMapHost=${HOSTNAME}
    - IMapPort=993
    - kafka_kafkaHost=broker:9092
    - kafka_schemaRegistryUrl=schema_registry:3502
    - kafka_mediaTopicName=simulation_entity_post
    - kafka_connectToKafka=true
    - server_port=7891
    depends_on:
    - mailserver
    - broker
    - large_file_service
    - schema_registry
    restart: always
  mailmonitor:
    image: drivereu/driver-mailmonitor:latest
    container_name: mailmonitor
    build:
      context: ./../../packages/server-monitor
      dockerfile: Dockerfile       
    ports:
    - "4200:4200"
#    links:
#    - mailgateway
#    depends_on:
#    - mailgateway
    restart: always
    
  silent-producer:
    image: drivereu/silent-producer:2.0.8
    hostname: topicproducer
    depends_on:
      - broker
      - schema_registry
    environment:
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: http://schema_registry:3502
      SCHEMA_FOLDER: /src/schemas
      PRODUCE_TOPICS: simulation_time_mgmt,system_topic_access_invite,system_heartbeat,system_logging
    restart: on-failure
    volumes:
      - ./schemas/avro-schemas:/src/schemas
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - '3500:3500'
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - '3501:3501'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_ADVERTISED_LISTENERS: 'EXTERNAL://localhost:3501,PLAINTEXT://broker:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_LISTENERS: 'EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 100000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000

  schema_registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema_registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - '3502:3502'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:3502'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:3500'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'

  kafka_rest:
    image: confluentinc/cp-kafka-rest:latest
    hostname: kafka_rest
    depends_on:
      - zookeeper
      - schema_registry
      - broker
    ports:
      - '8082:8082'
    environment:
      KAFKA_REST_HOST_NAME: kafka_rest
      KAFKA_REST_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:9092'
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:3500'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:3502'
      KAFKA_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: '*'

  kafka_topics_ui:
    image: landoop/kafka-topics-ui:latest
    hostname: kafka_topics_ui
    depends_on:
      - kafka_rest
    ports:
      - '3600:8000'
    environment:
      KAFKA_REST_PROXY_URL: 'http://kafka_rest:8082'
      PROXY: 'true'

  kafka_schema_registry_ui:
    image: landoop/schema-registry-ui:latest
    hostname: kafka_schema_registry_ui
    depends_on:
      - schema_registry
    ports:
      - '3601:8000'
    environment:
      SCHEMAREGISTRY_URL: 'http://schema_registry:3502'
      PROXY: 'true'
      
  large_file_service:
    image: drivereu/large-file-service:latest
    hostname: large_file_service
    ports:
      - '9090:9090'
    environment:
      HOST: localhost
      PORT: 9090
      
  postgres:
    image: postgres:9.6
    hostname: postgres
    ports:
      - "5432:5342"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: TRIAL_ADMIN
    volumes:
       - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
 
 
#  afteractionreview:
#    image: drivereu/after-action-review:latest
#    links:
#      - postgres
#      - broker
#      - schema_registry
#    ports:
#      - "8095:8095"
#    environment:
#      KAFKA_BROKER_URL: broker:9092
#      SCHEMA_REGISTRY_URL: http://schema_registry:3502
  
  pgadmin:
    image: dpage/pgadmin4
    links:
      - postgres
    restart: unless-stopped
    environment:
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_DEFAULT_EMAIL: "pgadmin@driver.eu"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "5050:5050"
  
  time_service:
    image: drivereu/test-bed-time-service:latest
    links:
      - broker
      - schema_registry
    ports:
      - "8100:8100"
    environment:
      KAFKA_BROKER_URL: broker:9092
      SCHEMA_REGISTRY_URL: http://schema_registry:3502
      AUTO_REGISTER_SCHEMAS: 'true'

  trial_management_tool:
    image: drivereu/trial-management-tool:latest
    links:
      - broker
      - schema_registry
    ports:
      - '3210:3210'
    environment:
      CLIENT_ID: TB-TrialMgmt
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: http://schema_registry:3502
      TRIAL_MANAGER_SERVER_PORT: 3210
      PRODUCE: system_request_change_of_trial_stage,system_tm_phase_message,system_tm_role_player,system_tm_session_mgmt,large_data_update
      SSL: 'false'
      SSL_PFX: certs/TB-TrialMgmt.p12
      SSL_PASSPHRASE: changeit
      SSL_CA: certs/test-ca.pem
    volumes:
      - trial-data:/app/trials

volumes:
  maildata:
    driver: local
  mailstate:
    driver: local
  mailconfig:
    driver: local
  postgres-data:
  trial-data:
